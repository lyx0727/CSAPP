# Execution begins at address 0
.pos 0
    irmovq stack,%rsp
    call main
    halt

.align 8
# Source block
src:
    .quad 0x00a
    .quad 0x0b0
    .quad 0xc00
# Destination block
dest:
    .quad 0x111
    .quad 0x222
    .quad 0x333


main:	
    irmovq src, %rdi
    irmovq dest, %rsi
    irmovq $0x3, %rdx
    call copy_block
	ret

# long copy_block(long *src, long *dest, long len)
copy_block:
    pushq %rsp
    pushq %rbx
    pushq %rcx
    irmovq $0x8, %rsp
    irmovq $0x1, %rbx
    irmovq $0x0, %rax       # long result = 0;
    jmp test
loop:
    mrmovq 0x0(%rdi), %rcx  # long val = *src;
    addq %rsp, %rdi         # src++;
    rmmovq %rcx, 0x0(%rsi)  # *dest = val;
    addq %rsp, %rsi         # dest++;
    xorq %rcx, %rax         # result ^= val;
    subq %rbx, %rdx         # len--;    
test:
    andq %rdx, %rdx
    jg loop
    popq %rcx
    popq %rbx
    popq %rsp
    ret

.pos 0x100
stack:
